@model PRUV_WebApp.Models.JoinedRequest

@{
    ViewData["Title"] = "Details";
    var images = Model.images;
    bool? initialized = Model.Initiated;
}
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<h1>@Model.RequestID</h1>
@if(initialized != true)
{

    <a asp-action="Initiate" asp-route-id="@Model?.Id">Initiate</a>
}
else
{
    <div class="col-md-4" >
        <form asp-action="ProvidePrice" asp-route-id="@Model?.Id">
            <div class="form-group" id="cost">
                <label for="cost" class="control-label">Cost:</label>
                <input name="cost" class="form-control" input type="number" />

            </div>
            <div class="form-group" id="retail">
                <label for="retail" class="control-label">Retail:</label>
                <input name="retail" class="form-control" input type="number" />
            </div>
            <div class="form-group">
                <input type="submit" value="Confirm" class="btn btn-primary" />
            </div>
        </form>
    </div>
}

<div>
    @* <h4>UserRequest</h4> *@
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.RequestID)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.RequestID)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Year)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Year)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Brand)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Brand)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Model)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Model)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Case)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Case)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Created)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Created)
        </dd>
        @* @foreach(var image in @images)
        {
            <div class="row">
                <div class="column">
                    <img src="data:image;base64,@System.Convert.ToBase64String(image)" />
                </div>
            </div>
        } *@
        
       
    </dl>
    
</div>
<div class="picrow">
@foreach (var image in @images)
{
    
        <div class="piccolumn">
            <a href="#" class="pop">
            <img id="imageresource" class="col-md-8" src="data:image;base64,@System.Convert.ToBase64String(image)" onclick="myFunction(this);" />
            </a>
        </div>
          
    
}
</div>

<!-- The expanding image container -->
<div class="piccontainer">
    <!-- Close the image -->
    <span onclick="this.parentElement.style.display='none'" class="closebtn">&times;</span>

    <!-- Expanded image -->
    <img id="expandedImg" style="width:100%">

    <!-- Image text -->
    <div id="imgtext"></div>
</div>



<script type="text/javascript">



    function myFunction(imgs) {
        // Get the expanded image
        var expandImg = document.getElementById("expandedImg");
        // Get the image text
        var imgText = document.getElementById("imgtext");
        // Use the same src in the expanded image as the image being clicked on from the grid
        expandImg.src = imgs.src;
        // Use the value of the alt attribute of the clickable image as text inside the expanded image
        imgText.innerHTML = imgs.alt;
        // Show the container element (hidden with CSS)
        expandImg.parentElement.style.display = "block";
    }

    

</script>

<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
